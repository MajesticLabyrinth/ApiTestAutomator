class BubbleExceptions(object):
    def __enter__(self):
        return self

    def __exit__(selfself, exc_type, exc_instance, traceback):
        if exc_instance:
            print('Bubbling up exception: %s.' % exc_instance)
        return False


with BubbleExceptions():
    print(5 + 5)
    print('Done!')

with BubbleExceptions():
    print(5/0)
    print('Done again!')


# A couple of important things are worth noticing here. The first printed line was
# generated by the __exit__ method itself. It corresponds to the print statement
# on the second line of __exit__. This means that __exit__ did run, and complete.
# Because it returned False, the exception that was sent to __exit__ in the first
# place is simply re-raised.